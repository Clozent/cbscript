dir "C:\Users\Seth\AppData\Roaming\.minecraft 1.20\saves\Physics - One Wall"
desc "Automatically mine the blocks in front of you"
scale 1000

import common
import transforms
import math
import click_detector

define @ChainLink = @Entity[type=block_display,tag=chain]
    create {block_state:{Name:"minecraft:stone",Count:0b}, transformation:[0.2f,0f,0f,-0.1f,0f,0.2f,0f,-0.1f,0f,0f,0.2f,-0.1f,0f,0f,0f,1f],Tags:["chain"]}
end

define @nearest_player = @Player[sort=nearest,limit=1]
end


$Precision = 1000
$Half = 500
reset
    /scoreboard objectives add absorbed minecraft.custom:minecraft.damage_dealt_absorbed

    initialize_transforms()

    at @nearest_player
        /kill @Position
        create @Position ~ ~ ~
    end
    
    destroy_colliders()

    CubeSize = 1500
    CubeInvMass = 800
    CubeInvRotInt = 400
    
    click_detector_reset()
    as @Player
        create_click()
    end
end

function destroy_colliders()
    for collider = max_collider to 1 by -1
        with
            $(collider) = collider
        destroy_collider()
    end
    
    /kill @PhysicsBlock
    
    max_collider = 0
end

function destroy_collider()
    define name collider = "collider_$(collider)"
    
    if max_collider == collider.id
        max_collider--
    end
    
    as @PhysicsBlock
        if @s.id == collider.id
            /kill @s
        end
    end
    
    /scoreboard players reset collider_$(collider)
end

function add_collider()
    id = get_unused_collider_id()

    at @nearest_player ^ ^1.6 ^3
        /tp @Position ~ ~ ~
        x = @Position.x
        y = @Position.y
        z = @Position.z
    end
    
    with
        $(collider) = id
        $(block_name) = "command_block"
    create_collider(x, y, z, CubeSize, CubeInvMass, CubeInvRotInt)
    
    unless id <= max_collider
        max_collider = id
    end
end

function get_unused_collider_id()
    for collider = 1 to max_collider+1
        with
            $(collider) = collider
        do
            define name collider = "collider_$(collider)"
            unless collider.inv_mass
                return_id = collider
                collider = 1000000000
            end
        end
    end
    
    return return_id
end

clock tick
    define name collider = "collider_$(collider)"

    as @Player at @s eyes
        /tp @Position ^ ^ ^
        world_eye_x = @Position.x
        world_eye_y = @Position.y
        world_eye_z = @Position.z
        
        /tp @Position ^ ^ ^1
        world_eye_dx = @Position.x - world_eye_x
        world_eye_dy = @Position.y - world_eye_y
        world_eye_dz = @Position.z - world_eye_z
        
        clicked = check_clicked()
        
        if @s.absorbed
            @s.absorbed = 0
        else
            clicked = False
        end
    end
    click_detector_tick()
    
    delete_collisions()

    for collider = 1 to max_collider
        with
            $(collider) = collider
        do
            if not collider.sleeping
                collider_physics_tick() with macros
            end
        end
    end
    
    if clicked
        min_col_t = 1000000000

        for collider = 1 to max_collider
            with
                $(collider) = collider
            do
                if collider_ray_intersection(world_eye_x, world_eye_y, world_eye_z, world_eye_dx, world_eye_dy, world_eye_dz) with macros
                    if t < min_col_t
                        min_col_t = t
                        min_x = collision_x
                        min_y = collision_y
                        min_z = collision_z
                        min_col = collider
                    end
                end
            end
        end
        
        if min_col_t < 1000000000
            $PunchPower = 1000
            with
                $(collider) = min_col
            collider_apply_impulse(min_x, min_y, min_z, world_eye_dx * $PunchPower / scale, world_eye_dy * $PunchPower / scale, world_eye_dz * $PunchPower / scale)
            
            @Position.<pos> = <min_x, min_y, min_z>
            at @Position
                /particle minecraft:crit ~ ~ ~ 0 0 0 0 1 force
            end
        else
            add_collider()
        end
    end
    
    for collider = 1 to max_collider
        with
            $(collider) = collider
        do
            if not collider.sleeping
                get_collisions() with macros
                get_edge_world_collisions() with macros
            end
        end
    end
    
    for col1 = 1 to max_collider
        for col2 = col1+1 to max_collider
            with
                $(collider1) = col1
                $(collider2) = col2
            get_collider_collider_collisions()
        end
    end

    resolve_collision_velocity()
    resolve_collision_penetration()
    
    for collider = 1 to max_collider
        with
            $(collider) = collider
        do
            if not collider.sleeping
                collider_set_transform() with macros
                collider_check_sleep() with macros
            end
        end
    end
end