dir "C:\Users\Seth\AppData\Roaming\.minecraft 1.20\saves\Blocket League"
desc "Blocket League game"
scale 1000

import common
import math
import colliders

define @PlayerInteraction = @Entity[type=interaction, tag=PlayerInteraction]
    create {Tags:["PlayerInteraction"], width:6, height:6, teleport_duration:1}
end

@Playing = @Player[gamemode=adventure]
@PlayerBlock = @Entity[type=block_display,tag=PlayerBlock]
@BallBlock = @Entity[type=block_display,tag=BallBlock,limit=1]

define @Glass = @Entity[type=block_display,tag=Glass]
    create {Tags:["Glass"], block_state:{Name:"minecraft:black_stained_glass"}, transformation:{left_rotation: [0f, 0f, 0f, 1f], translation: [-20f, -30f, -10f], right_rotation: [0f, 0f, 0f, 1f], scale:[40f, 60f, 20f]}, view_range:10f}
    
    <scale> : transformation.scale float 1000
    scale_x : transformation.scale[0] float 1000
    scale_y : transformation.scale[1] float 1000
    scale_z : transformation.scale[2] float 1000

    <translation> : transformation.translation float 1000
    translation_x : transformation.translation[0] float 1000
    translation_y : transformation.translation[1] float 1000
    translation_z : transformation.translation[2] float 1000
    
end

$Precision = 1000
$Half = 500
$Billion = 1000000000

$Red = 1
$Blue = 2

reset
    /gamerule playersNetherPortalCreativeDelay 1000000
    /gamerule playersNetherPortalDefaultDelay 1000000
    
    /team add red "Red"
    /team modify red color red
    /team add blue "Blue"
    /team modify blue color blue
    
    /scoreboard objectives add join_red_team trigger
    /scoreboard objectives add join_blue_team trigger
    /scoreboard objectives add spectate trigger
    /scoreboard objectives add start_game trigger
    
    as @Player
        tell_options()
    end
end

function tell_options()
    tell @s "{R[\[Join Red\]](/trigger join_red_team set 1) {B[\[Join Blue\]](/trigger join_blue_team set 1) {Y[\[Spectate\]](/trigger spectate set 1) {G[\[Start Game\]](/trigger start_game set 1)"
end

function join_red_team()
    if @s[team=red]
        tell @s "You're already on {Rred team{-"
    else
        /team join red @s
        /gamemode adventure @s
        tell @a "(@s) joined the {Rred team{-."
    end
    
    tell_options()
end

function join_blue_team()
    if @s[team=blue]
        tell @s "You're already on {Bblue team{-."
    else
        /team join blue @s
        /gamemode adventure @s
        tell @a "(@s) joined the {Bblue team{-."
    end
    
    tell_options()
end

function spectate()
    if @s[gamemode=spectator]
        tell @s "You're already spectating."
    else
        /team leave @s
        /gamemode spectator @s
        tell @a "(@s) is now spectating."
    end
    
    tell_options()
end

function start_game()
    reset_game()
end

function reset_game()
    initialize_transforms()
    
    destroy_colliders()
    /kill @PlayerInteraction
    
    as @Playing
        /ride @s dismount
    end
    
    /kill @Glass
    
    YnegPlane = 56000
    
    YposPlane = YnegPlane + 36000
    XposPlane = 45600
    ZposPlane = 30000
    XnegPlane = -XposPlane + 1000
    ZnegPlane = -ZposPlane + 1000
    
    @Position.<pos> = <(XnegPlane + XposPlane) / 2, (YnegPlane + YposPlane) / 2, ZposPlane>
    at @Position
        as create @Glass
            @s.<scale> = <XposPlane - XnegPlane, YposPlane - YnegPlane, 10>
            @s.<translation> = <(XnegPlane - XposPlane) / 2, (YnegPlane - YposPlane) / 2, 0>
        end
    end
    
    @Position.<pos> = <(XnegPlane + XposPlane) / 2, (YnegPlane + YposPlane) / 2, ZnegPlane>
    at @Position
        as create @Glass
            @s.<scale> = <XposPlane - XnegPlane, YposPlane - YnegPlane, 10>
            @s.<translation> = <(XnegPlane - XposPlane) / 2, (YnegPlane - YposPlane) / 2, 0>
        end
    end

    @Position.<pos> = <XposPlane, (YnegPlane + YposPlane) / 2, (ZnegPlane + ZposPlane) / 2>
    at @Position
        as create @Glass
            @s.<scale> = <10, YposPlane - YnegPlane, ZposPlane - ZnegPlane>
            @s.<translation> = <0, (YnegPlane - YposPlane) / 2, (ZnegPlane - ZposPlane) / 2>
            /data modify entity @s block_state.Name set value "minecraft:red_stained_glass"
        end
    end
    
    @Position.<pos> = <XnegPlane, (YnegPlane + YposPlane) / 2, (ZnegPlane + ZposPlane) / 2>
    at @Position
        as create @Glass
            @s.<scale> = <10, YposPlane - YnegPlane, ZposPlane - ZnegPlane>
            @s.<translation> = <0, (YnegPlane - YposPlane) / 2, (ZnegPlane - ZposPlane) / 2>
            /data modify entity @s block_state.Name set value "minecraft:blue_stained_glass"
        end
    end
    
    @Position.<pos> = <(XnegPlane + XposPlane) / 2, YposPlane, (ZnegPlane + ZposPlane) / 2>
    at @Position
        as create @Glass
            @s.<scale> = <XposPlane - XnegPlane, 10, ZposPlane - ZnegPlane>
            @s.<translation> = <(XnegPlane - XposPlane) / 2, 0, (ZnegPlane - ZposPlane) / 2>
        end
    end
    
    PortalHeight = (24000) / 3 / $Precision * $Precision
    PortalWidth = (59000) / 5 / $Precision * $Precision
    
    #@Position.<pos> = <XnegPlane, YnegPlane + PortalHeight / 2, (ZnegPlane + ZposPlane) / 2>
    #at @Position
    #    as create @Glass
    #        @s.<scale> = <100, PortalHeight, PortalWidth>
    #        @s.<translation> = <-50, -PortalHeight / 2, -PortalWidth / 2>
    #        /data modify entity @s block_state.Name set value "minecraft:purple_wool"
    #    end
    #end
    
    #@Position.<pos> = <XposPlane, YnegPlane + PortalHeight / 2, (ZnegPlane + ZposPlane) / 2>
    #at @Position
    #    as create @Glass
    #        @s.<scale> = <100, PortalHeight, PortalWidth>
    #        @s.<translation> = <-50, -PortalHeight / 2, -PortalWidth / 2>
    #        /data modify entity @s block_state.Name set value "minecraft:purple_wool"
    #    end
    #end

    ObsidianHeight = PortalHeight + 2000
    ObsidianWidth = PortalWidth + 2000
    
    #@Position.<pos> = <XnegPlane, YnegPlane + PortalHeight / 2, (ZnegPlane + ZposPlane) / 2>
    #at @Position
    #    as create @Glass
    #        @s.<scale> = <50, ObsidianHeight, ObsidianWidth>
    #        @s.<translation> = <-25, -ObsidianHeight / 2, -ObsidianWidth / 2>
    #        /data modify entity @s block_state.Name set value "minecraft:obsidian"
    #    end
    #end
    
    #@Position.<pos> = <XposPlane, YnegPlane + PortalHeight / 2, (ZnegPlane + ZposPlane) / 2>
    #at @Position
    #    as create @Glass
    #        @s.<scale> = <50, ObsidianHeight, ObsidianWidth>
    #        @s.<translation> = <-25, -ObsidianHeight / 2, -ObsidianWidth / 2>
    #        /data modify entity @s block_state.Name set value "minecraft:obsidian"
    #    end
    #end


    # Disable world collisions
    colliders.world_collisions = False
    
    # Enable Impact Sounds
    transforms.impact_sounds = True
    
    Restitution = 2000
    Gravity = 15
    Friction = 1000

    CubeSize = 4000
    CubeInvMass = 1200
    CubeInvRotInt = 200

    with
        $(block_name) = "target"
    add_collider(500, 56000 + CubeSize / 2, 500)
    as @PhysicsBlock
        /tag @s add BallBlock
        @s.BallBlock = True
    end
    
    collider_1.recent_motion = 0
    collider_1.recent_rotation = 0
    
    CubeSize = 800
    CubeInvMass = 200
    CubeInvRotInt = 200
    
    as @Player
        tell_options()
    end
end

function add_player_block()
    with
        $(block_name) = "red_wool"
    add_collider(-10000, 56000 + CubeSize / 2, 0)
end

clock tick
    /kill @Position
    create @Position
    
    as @PlayerInteraction
        on attacker
            @s.boosting = 10
        end
        
        on target
            @s.jumping = True
        end
        /data remove entity @s attack
        /data remove entity @s interaction
    end
    
    @PlayerBlock.current = False
    
    as @Player[gamemode=survival]
        /gamemode adventure @s
    end
    
    as @Player
        if @s.join_red_team
            join_red_team()
            @s.join_red_team = False
        end
        /scoreboard players enable @s join_red_team
        
        if @s.join_blue_team
            join_blue_team()
            @s.join_blue_team = False
        end
        /scoreboard players enable @s join_blue_team
        
        if @s.spectate
            spectate()
            @s.spectate = False
        end
        /scoreboard players enable @s spectate

        if @s.start_game
            start_game()
            @s.start_game = False
        end
        /scoreboard players enable @s start_game
    end
    
    
    for @player in @Playing
        /effect give @s minecraft:resistance infinite 5 true
        /effect give @s minecraft:instant_health infinite 5 true
        /effect give @s minecraft:saturation infinite 5 true
        
        at @s ~ ~ ~
            <x, y, z> = @s.<pos>
            at @s ^ ^ ^1
                /tp @Position ~ ~ ~
                <dx, dy, dz> = @Position.<pos> - <x, y, z>
            end
            
            vx = @s.vx
            vz = @s.vz
            speed = sqrt(vx*vx + vz*vz)
            
            horiz_mag = sqrt(dx*dx + dz*dz)
            
            dx = vx * horiz_mag / speed
            dz = vz * horiz_mag / speed
            
            unless @s.id
                player_id++
                @s.id = player_id
            end
            
            current_id = @s.id
            
            jumping = @s.jumping
            @s.jumping = False
            
            @s.boosting--
            boosting = @s.boosting
            
            if @s.menu_cooldown
                @s.menu_cooldown--
            end
            
            if @s[team=red]
                team = $Red
            else if @s[team=blue]
                team = $Blue
            else
                team = None
            end
        
            as @PlayerInteraction if @s.id == current_id
                /tp @s ~ ~-2 ~
            else
                as create @PlayerInteraction
                    @s.id = current_id
                end
            end

            as @PlayerBlock at @s if @s.player_id == current_id
                dismounted = result
                    /ride @player mount @s
                    
                if dismounted as @player unless @s.menu_cooldown > 0
                    tell_options()
                    @s.menu_cooldown = 20
                end
                
                unless team == @s.team
                    if team == $Red
                        /data modify entity @s block_state.Name set value "minecraft:red_wool"
                    else if team == $Blue
                        /data modify entity @s block_state.Name set value "minecraft:blue_wool"
                    end

                    @s.team = team
                end
                
                with
                    $(collider) = @s.collider_id
                do
                    define name collider = "collider_$(collider)"
                    
                    vx = collider.velocity_x
                    vy = collider.velocity_y
                    vz = collider.velocity_z
                    
                    horiz_vel = sqrt(vx*vx + vz*vz)
                    norm_vx = vx * $Precision / horiz_vel
                    norm_vz = vz * $Precision / horiz_vel
                    
                    braking_dot = -(dx * norm_vx + dz * norm_vz) / $Precision
                    
                    if braking_dot > 0
                        dx = dx * braking_dot * 2/ $Precision
                        dz = dz * braking_dot * 2 / $Precision
                    end
                    
                    if jumping and collider.y <= YnegPlane + 2000
                        vy = 500
                        @s.braking = False
                    end
                    
                    if boosting and @s.boost_meter > 0
                        @s.boost_meter--
                    else if @s.boost_meter < 100
                        @s.boost_meter++
                        boosting = 0
                    end
                    
                    if boosting
                        vx += dx / 20
                        vy += dy / 20
                        vz += dz / 20
                        
                        if boosting == 9
                            /playsound minecraft:entity.blaze.shoot master @a ~ ~ ~ 0.2 2
                        end
                        /particle minecraft:soul_fire_flame ~ ~ ~ 0 0 0 0 1 force
                    else
                        vx += dx / 30
                        vy += dy / 80
                        vz += dz / 30
                        
                        /particle minecraft:flame ~ ~ ~ 0 0 0 0 1 force
                    end
                    
                    # Extra gravity on the vehicle
                    vy -= 15

                    collider.velocity_x = vx
                    collider.velocity_y = vy
                    collider.velocity_z = vz

                    
                    collider_wake_up() with macros
                end
                
                with
                    $(id) = current_id
                do
                    /execute store result bossbar boost_$(id) value run scoreboard players get @s boost_meter
                end
            else
                @PhysicsBlock.block_age = 1
                add_player_block()
                as @PhysicsBlock 
                    @s.block_age++
                    if @s.block_age == 1
                        @s.player_id = current_id
                        /tag @s add PlayerBlock
                        /ride @player mount @s
                        @s.boost_meter = 100
                        
                        with
                            $(id) = current_id
                        do
                            /bossbar add boost_$(id) "Boost Meter"
                            /bossbar set boost_$(id) players @player
                            /bossbar set boost_$(id) value 100
                        end
                        
                        if team == $Red
                            /data modify entity @s block_state.Name set value "minecraft:red_wool"
                        else if team == $Blue
                            /data modify entity @s block_state.Name set value "minecraft:blue_wool"
                        end
                        @s.team = team
                    end                
                end
            end
            
            @s.boosting = boosting
        end
    end
    
    as @PlayerInteraction
        id = @s.id
        as @Player if @s.id == id
        else
            /kill @s
        end
    end
    
    as @PlayerBlock
        current_id = @s.player_id
        as @Playing if @s.id == current_id
            player = True
        else
            player = False
        end
        
        if not player
            with
                $(collider) = @s.collider_id
            destroy_collider()
            /kill @s
        end
    end
    
    as @PlayerBlock at @s
        
    end
    
    colliders_physics_tick()
    colliders_get_new_collisions()
    get_plane_collisions()
    colliders_resolve_collisions()
    colliders_finalize_tick()
end

function get_plane_collisions()
    for collider_iter = 1 to max_collider
        with
            $(collider) = collider_iter
        do
            define name collider = "collider_$(collider)"
            define name collider_axis_0 = "collider_$(collider)"
            
            y = collider.min_y
            if y <= YnegPlane
                pen = YnegPlane - y
                
                if pen > collider.max_pen
                    with
                        $(vertex) = collider.min_y_vertex
                    do
                        define name vertex = "collider_$(collider)_v$(vertex)"

                        x = vertex.x
                        z = vertex.z
                    end
                    
                    nx = 0
                    ny = $Precision
                    nz = 0
                    
                    create_plane_collision() with macros
                end
            end
            
            y = collider.max_y
            if y >= YposPlane
                pen = y - YposPlane
                
                if pen > collider.max_pen
                    with
                        $(vertex) = collider.max_y_vertex
                    do
                        define name vertex = "collider_$(collider)_v$(vertex)"

                        x = vertex.x
                        z = vertex.z
                    end
                    
                    nx = 0
                    ny = -$Precision
                    nz = 0
                    
                    create_plane_collision() with macros
                end
            end

            x = collider.min_x
            if x <= XnegPlane
                pen = XnegPlane - x
                
                if pen > collider.max_pen
                    with
                        $(vertex) = collider.min_x_vertex
                    do
                        define name vertex = "collider_$(collider)_v$(vertex)"

                        y = vertex.y
                        z = vertex.z
                    end
                    
                    if collider_iter == 1 and y <= YnegPlane + PortalHeight and z >= (ZnegPlane + ZposPlane) / 2 - PortalWidth / 2 and z <= (ZnegPlane + ZposPlane) / 2 + PortalWidth / 2
                        as @Player at @s
                            /playsound minecraft:ui.toast.challenge_complete master @s 0 0 0 1 1 1
                        end
                    end
                    
                    nx = $Precision
                    ny = 0
                    nz = 0
                    
                    create_plane_collision() with macros
                end
            end
            
            x = collider.max_x
            if x >= XposPlane
                pen = x - XposPlane
                
                if pen > collider.max_pen
                    with
                        $(vertex) = collider.max_x_vertex
                    do
                        define name vertex = "collider_$(collider)_v$(vertex)"

                        y = vertex.y
                        z = vertex.z
                    end
                    
                    if collider_iter == 1 and y <= YnegPlane + PortalHeight and z >= (ZnegPlane + ZposPlane) / 2 - PortalWidth / 2 and z <= (ZnegPlane + ZposPlane) / 2 + PortalWidth / 2
                        as @Player at @s
                            /playsound minecraft:ui.toast.challenge_complete master @s 0 0 0 1 1 1
                        end
                    end
                    
                    nx = -$Precision
                    ny = 0
                    nz = 0
                    
                    create_plane_collision() with macros
                end
            end

            z = collider.min_z
            if z <= ZnegPlane
                pen = ZnegPlane - z
                
                if pen > collider.max_pen
                    with
                        $(vertex) = collider.min_z_vertex
                    do
                        define name vertex = "collider_$(collider)_v$(vertex)"

                        x = vertex.x
                        y = vertex.y
                    end
                    
                    nx = 0
                    ny = 0
                    nz = $Precision
                    
                    create_plane_collision() with macros
                end
            end
            
            z = collider.max_z
            if z >= ZposPlane
                pen = z - ZposPlane
                
                if pen > collider.max_pen
                    with
                        $(vertex) = collider.max_z_vertex
                    do
                        define name vertex = "collider_$(collider)_v$(vertex)"

                        x = vertex.x
                        y = vertex.y
                    end
                    
                    nx = 0
                    ny = 0
                    nz = -$Precision
                    
                    create_plane_collision() with macros
                end
            end
        end
    end
end

function create_plane_collision()
    define name collider = "collider_$(collider)"
    
    id = get_unused_collision_id()
    with
        $(collision) = id
    do
        define name collision = "collision_$(collision)"
        collision.id = id
        collision.type = 0
        collision.pen = pen
        
        collision.x = x
        collision.y = y
        collision.z = z
        
        collision.nx = nx
        collision.ny = ny
        collision.nz = nz
        
        collision.restitution = 600
        
        collision.collider1 = collider_iter
    end

    collider.max_pen = pen
    collider.max_pen_col = id

end
