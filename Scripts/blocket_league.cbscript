dir "C:\Users\Seth\AppData\Roaming\.minecraft 1.20\saves\Blocket League"
desc "Blocket League game"
scale 1000

import common
import math
import colliders

define @PlayerInteraction = @Entity[type=interaction, tag=PlayerInteraction]
    create {Tags:["PlayerInteraction"], width:6, height:6, teleport_duration:1}
end

@Playing = @Player[gamemode=adventure]
@PlayerBlock = @Entity[type=block_display,tag=PlayerBlock]
@BallBlock = @Entity[type=block_display,tag=BallBlock,limit=1]

define @Glass = @Entity[type=block_display,tag=Glass]
    create {Tags:["Glass"], block_state:{Name:"minecraft:black_stained_glass"}, transformation:{left_rotation: [0f, 0f, 0f, 1f], translation: [-20f, -30f, -10f], right_rotation: [0f, 0f, 0f, 1f], scale:[40f, 60f, 20f]}, view_range:10f}
    
    <scale> : transformation.scale float 1000
    scale_x : transformation.scale[0] float 1000
    scale_y : transformation.scale[1] float 1000
    scale_z : transformation.scale[2] float 1000

    <translation> : transformation.translation float 1000
    translation_x : transformation.translation[0] float 1000
    translation_y : transformation.translation[1] float 1000
    translation_z : transformation.translation[2] float 1000
    
end

$Precision = 1000
$Half = 500
$Billion = 1000000000

$Red = 1
$Blue = 2

$Lobby = 1
$StartingGame = 2
$Tipoff = 3
$Playing = 4
$Scored = 5

$BallSize = 4000
$PlayerSize = 800

reset
    /gamerule playersNetherPortalCreativeDelay 1000000
    /gamerule playersNetherPortalDefaultDelay 1000000
    
    /team add red "Red"
    /team modify red color red
    /team add blue "Blue"
    /team modify blue color blue
    
    /scoreboard objectives add join_red_team trigger
    /scoreboard objectives add join_blue_team trigger
    /scoreboard objectives add spectate trigger
    /scoreboard objectives add start_game trigger
    /scoreboard objectives add stop_game trigger
    
    /scoreboard objectives add score dummy "Score"
    
    as @Player
        tell_options()
    end
end

function tell_options()
    tell @s "{R[\[Join Red\]](/trigger join_red_team set 1) {B[\[Join Blue\]](/trigger join_blue_team set 1) {Y[\[Spectate\]](/trigger spectate set 1) {G[\[Start Game\]](/trigger start_game set 1) {R[\[Stop Game\]](/trigger stop_game set 1)"
end

function join_red_team()
    if @s[team=red]
        tell @s "You're already on {Rred team{-"
    else
        /team join red @s
        /gamemode adventure @s
        tell @a "(@s) joined the {Rred team{-."
        
        spawn_additional_player()
    end
    
    tell_options()
end

function join_blue_team()
    if @s[team=blue]
        tell @s "You're already on {Bblue team{-."
    else
        /team join blue @s
        /gamemode adventure @s
        tell @a "(@s) joined the {Bblue team{-."
        
        spawn_additional_player()
    end
    
    tell_options()
end

function spectate()
    if @s[gamemode=spectator]
        tell @s "You're already spectating."
    else
        /team leave @s
        /gamemode spectator @s
        tell @a "(@s) is now spectating."
    end
    
    tell_options()
end

function start_game()
    if gamemode == $Lobby
        reset_game()
        
        /kill @Glass[tag=Board]
            
        gamemode = $StartingGame
        Red.score = 0
        Blue.score = 0
        game_timer.score = -1
        game_timer = 20*60*5
        
        /scoreboard players display numberformat game_timer score fixed "5:00"
        /scoreboard players display name game_timer score "Time"
            
        /scoreboard objectives setdisplay sidebar score
    else
        tell @s "The game has already begun!"
    end
end

function stop_game()
    if gamemode == $Lobby
        tell @s "The game is already stopped."
    else
        reset_game()
        
        gamemode = $Lobby
        /scoreboard objectives setdisplay sidebar
        
        @Position.<pos> = <XnegPlane, YnegPlane + PortalHeight / 2 + 1000, (ZnegPlane + ZposPlane) / 2 + 1000>
        at @Position
            as create @Glass
                @s.<scale> = <1000, PortalHeight-2000, PortalWidth-2000>
                @s.<translation> = <-500, -PortalHeight / 2, -PortalWidth / 2>
                /data modify entity @s block_state.Name set value "minecraft:birch_planks"
                /tag @s add Board
            end
        end
        
        @Position.<pos> = <XposPlane, YnegPlane + PortalHeight / 2 + 1000, (ZnegPlane + ZposPlane) / 2 + 1000>
        at @Position
            as create @Glass
                @s.<scale> = <1000, PortalHeight-2000, PortalWidth-2000>
                @s.<translation> = <-500, -PortalHeight / 2, -PortalWidth / 2>
                /data modify entity @s block_state.Name set value "minecraft:birch_planks"
                /tag @s add Board
            end
        end
    end
end

function reset_game()
    initialize_transforms()
    
    destroy_colliders()
    /kill @PlayerInteraction
    
    as @Playing
        /ride @s dismount
    end
    
    /kill @Glass
    
    YnegPlane = 56000
    
    YposPlane = YnegPlane + 36000
    XposPlane = 45600
    ZposPlane = 30000
    XnegPlane = -XposPlane + 1000
    ZnegPlane = -ZposPlane + 1000
    
    @Position.<pos> = <(XnegPlane + XposPlane) / 2, (YnegPlane + YposPlane) / 2, ZposPlane>
    at @Position
        as create @Glass
            @s.<scale> = <XposPlane - XnegPlane, YposPlane - YnegPlane, 10>
            @s.<translation> = <(XnegPlane - XposPlane) / 2, (YnegPlane - YposPlane) / 2, 0>
        end
    end
    
    @Position.<pos> = <(XnegPlane + XposPlane) / 2, (YnegPlane + YposPlane) / 2, ZnegPlane>
    at @Position
        as create @Glass
            @s.<scale> = <XposPlane - XnegPlane, YposPlane - YnegPlane, 10>
            @s.<translation> = <(XnegPlane - XposPlane) / 2, (YnegPlane - YposPlane) / 2, 0>
        end
    end

    @Position.<pos> = <XposPlane, (YnegPlane + YposPlane) / 2, (ZnegPlane + ZposPlane) / 2>
    at @Position
        as create @Glass
            @s.<scale> = <10, YposPlane - YnegPlane, ZposPlane - ZnegPlane>
            @s.<translation> = <0, (YnegPlane - YposPlane) / 2, (ZnegPlane - ZposPlane) / 2>
            /data modify entity @s block_state.Name set value "minecraft:red_stained_glass"
        end
    end
    
    @Position.<pos> = <XnegPlane, (YnegPlane + YposPlane) / 2, (ZnegPlane + ZposPlane) / 2>
    at @Position
        as create @Glass
            @s.<scale> = <10, YposPlane - YnegPlane, ZposPlane - ZnegPlane>
            @s.<translation> = <0, (YnegPlane - YposPlane) / 2, (ZnegPlane - ZposPlane) / 2>
            /data modify entity @s block_state.Name set value "minecraft:blue_stained_glass"
        end
    end
    
    @Position.<pos> = <(XnegPlane + XposPlane) / 2, YposPlane, (ZnegPlane + ZposPlane) / 2>
    at @Position
        as create @Glass
            @s.<scale> = <XposPlane - XnegPlane, 10, ZposPlane - ZnegPlane>
            @s.<translation> = <(XnegPlane - XposPlane) / 2, 0, (ZnegPlane - ZposPlane) / 2>
        end
    end
    
    PortalHeight = (24000) / 3 / $Precision * $Precision
    PortalWidth = (59000) / 5 / $Precision * $Precision
    
    #@Position.<pos> = <XnegPlane, YnegPlane + PortalHeight / 2, (ZnegPlane + ZposPlane) / 2>
    #at @Position
    #    as create @Glass
    #        @s.<scale> = <100, PortalHeight, PortalWidth>
    #        @s.<translation> = <-50, -PortalHeight / 2, -PortalWidth / 2>
    #        /data modify entity @s block_state.Name set value "minecraft:purple_wool"
    #    end
    #end
    
    #@Position.<pos> = <XposPlane, YnegPlane + PortalHeight / 2, (ZnegPlane + ZposPlane) / 2>
    #at @Position
    #    as create @Glass
    #        @s.<scale> = <100, PortalHeight, PortalWidth>
    #        @s.<translation> = <-50, -PortalHeight / 2, -PortalWidth / 2>
    #        /data modify entity @s block_state.Name set value "minecraft:purple_wool"
    #    end
    #end

    ObsidianHeight = PortalHeight + 2000
    ObsidianWidth = PortalWidth + 2000
    
    #@Position.<pos> = <XnegPlane, YnegPlane + PortalHeight / 2, (ZnegPlane + ZposPlane) / 2>
    #at @Position
    #    as create @Glass
    #        @s.<scale> = <50, ObsidianHeight, ObsidianWidth>
    #        @s.<translation> = <-25, -ObsidianHeight / 2, -ObsidianWidth / 2>
    #        /data modify entity @s block_state.Name set value "minecraft:obsidian"
    #    end
    #end
    
    #@Position.<pos> = <XposPlane, YnegPlane + PortalHeight / 2, (ZnegPlane + ZposPlane) / 2>
    #at @Position
    #    as create @Glass
    #        @s.<scale> = <50, ObsidianHeight, ObsidianWidth>
    #        @s.<translation> = <-25, -ObsidianHeight / 2, -ObsidianWidth / 2>
    #        /data modify entity @s block_state.Name set value "minecraft:obsidian"
    #    end
    #end


    # Disable world collisions
    colliders.world_collisions = False
    
    # Enable Impact Sounds
    transforms.impact_sounds = True
    
    Restitution = 2000
    Gravity = 15
    Friction = 1000

    CubeSize = $BallSize
    CubeInvMass = 1200
    CubeInvRotInt = 200

    with
        $(block_name) = "target"
    add_collider(500, 56000 + CubeSize / 2, 500)
    as @PhysicsBlock
        /tag @s add BallBlock
        @s.BallBlock = True
    end
    
    collider_1.recent_motion = 0
    collider_1.recent_rotation = 0
    
    CubeSize = $PlayerSize
    CubeInvMass = 200
    CubeInvRotInt = 200
    
    spawned_players = False
    
    as @Player
        tell_options()
    end
end

function add_player_block()
    with
        $(block_name) = "yellow_wool"
    add_collider(-10000, 56000 + CubeSize / 2, 0)
end

clock tick
    unless gamemode
        stop_game()
    end
    
    allow_movement = False
    if gamemode == $Lobby
        allow_movement = True
    end
    if gamemode == $Playing
        allow_movement = True
        game_timer--
    end

    if gamemode == $Scored
        scored_timer--
        
        if scored_timer == 0
            start_tipoff()
        end
    end
    
    if gamemode == $Tipoff
        if tipoff_timer % 20 == 0
            tipoff_seconds = tipoff_timer / 20
            title @a 0 15 5 "(tipoff_seconds)"
        end
        
        tipoff_timer--
        
        if tipoff_timer == 0
            title @a 0 15 5 "Go!"
            gamemode = $Playing
        end
    end
    
    total_seconds = game_timer / 20
    disp_seconds = total_seconds % 60
    disp_minutes = total_seconds / 60
    with
        $(sec) = disp_seconds
        $(min) = disp_minutes
    do
        if disp_seconds < 10
            /scoreboard players display numberformat game_timer score fixed "$(min):0$(sec)"
        else
            /scoreboard players display numberformat game_timer score fixed "$(min):$(sec)"
        end
    end
    
    

    /kill @Position
    create @Position
    
    as @PlayerInteraction
        on attacker
            @s.boosting = 10
        end
        
        on target
            @s.jumping = True
        end
        /data remove entity @s attack
        /data remove entity @s interaction
    end
    
    @PlayerBlock.current = False
    
    as @Player[gamemode=survival]
        /gamemode adventure @s
    end
    
    as @Player
        if @s.join_red_team
            join_red_team()
            @s.join_red_team = False
        end
        /scoreboard players enable @s join_red_team
        
        if @s.join_blue_team
            join_blue_team()
            @s.join_blue_team = False
        end
        /scoreboard players enable @s join_blue_team
        
        if @s.spectate
            spectate()
            @s.spectate = False
        end
        /scoreboard players enable @s spectate

        if @s.start_game
            start_game()
            @s.start_game = False
        end
        /scoreboard players enable @s start_game

        if @s.stop_game
            stop_game()
            @s.stop_game = False
        end
        /scoreboard players enable @s stop_game
    end
    
    
    for @player in @Playing
        /effect give @s minecraft:resistance infinite 5 true
        /effect give @s minecraft:instant_health infinite 5 true
        /effect give @s minecraft:saturation infinite 5 true
        
        at @s ~ ~ ~
            <x, y, z> = @s.<pos>
            at @s ^ ^ ^1
                /tp @Position ~ ~ ~
                <dx, dy, dz> = @Position.<pos> - <x, y, z>
            end
            
            vx = @s.vx
            vz = @s.vz
            speed = sqrt(vx*vx + vz*vz)
            
            horiz_mag = sqrt(dx*dx + dz*dz)
            
            dx = vx * horiz_mag / speed
            dz = vz * horiz_mag / speed
            
            unless @s.id
                player_id++
                @s.id = player_id
            end
            
            current_id = @s.id
            
            jumping = @s.jumping
            @s.jumping = False
            
            @s.boosting--
            boosting = @s.boosting
            
            if @s.menu_cooldown
                @s.menu_cooldown--
            end
            
            if @s[team=red]
                team = $Red
            else if @s[team=blue]
                team = $Blue
            else
                team = None
            end
        
            as @PlayerInteraction if @s.id == current_id
                /tp @s ~ ~-2 ~
            else
                as create @PlayerInteraction
                    @s.id = current_id
                end
            end

            as @PlayerBlock at @s if @s.player_id == current_id
                dismounted = result
                    /ride @player mount @s
                    
                if dismounted as @player unless @s.menu_cooldown > 0
                    tell_options()
                    @s.menu_cooldown = 20
                end
                
                unless team == @s.team
                    if team == $Red
                        /data modify entity @s block_state.Name set value "minecraft:red_wool"
                    else if team == $Blue
                        /data modify entity @s block_state.Name set value "minecraft:blue_wool"
                    end

                    @s.team = team
                end
                
                with
                    $(collider) = @s.collider_id
                do
                    define name collider = "collider_$(collider)"
                    
                    vx = collider.velocity_x
                    vy = collider.velocity_y
                    vz = collider.velocity_z
                    
                    if allow_movement
                        horiz_vel = sqrt(vx*vx + vz*vz)
                        norm_vx = vx * $Precision / horiz_vel
                        norm_vz = vz * $Precision / horiz_vel
                        
                        braking_dot = -(dx * norm_vx + dz * norm_vz) / $Precision
                        
                        if braking_dot > 0
                            dx = dx * braking_dot * 2/ $Precision
                            dz = dz * braking_dot * 2 / $Precision
                        end
                        
                        if jumping and collider.y <= YnegPlane + 2000
                            vy = 500
                            @s.braking = False
                        end
                        
                        if boosting and @s.boost_meter > 0
                            @s.boost_meter--
                        else if @s.boost_meter < 100
                            @s.boost_meter++
                            boosting = 0
                        end
                        
                        if boosting
                            vx += dx / 20
                            vy += dy / 20
                            vz += dz / 20
                            
                            if boosting == 9
                                /playsound minecraft:entity.blaze.shoot master @a ~ ~ ~ 0.2 2
                            end
                            /particle minecraft:soul_fire_flame ~ ~ ~ 0 0 0 0 1 force
                        else
                            vx += dx / 30
                            vy += dy / 80
                            vz += dz / 30
                            
                            /particle minecraft:flame ~ ~ ~ 0 0 0 0 1 force
                        end
                    end
                    
                    unless gamemode == $Scored
                        # Extra gravity on the vehicle
                        vy -= 15
                    end

                    collider.velocity_x = vx
                    collider.velocity_y = vy
                    collider.velocity_z = vz
                    
                    collider_wake_up() with macros
                end
                
                with
                    $(id) = current_id
                do
                    /execute store result bossbar boost_$(id) value run scoreboard players get @s boost_meter
                end
            else
                @PhysicsBlock.block_age = 1
                add_player_block()
                as @PhysicsBlock 
                    @s.block_age++
                    if @s.block_age == 1
                        @s.player_id = current_id
                        /tag @s add PlayerBlock
                        /ride @player mount @s
                        @s.boost_meter = 100
                        
                        with
                            $(id) = current_id
                        do
                            /bossbar add boost_$(id) "Boost Meter"
                            /bossbar set boost_$(id) players @player
                            /bossbar set boost_$(id) value 100
                        end
                        
                        if team == $Red
                            /data modify entity @s block_state.Name set value "minecraft:red_wool"
                        else if team == $Blue
                            /data modify entity @s block_state.Name set value "minecraft:blue_wool"
                        end
                        @s.team = team
                    end                
                end
            end
            
            @s.boosting = boosting
        end
    end
    
    as @BallBlock at @s
        if gamemode == $Scored and @s.collider_id == 1
            /particle explosion ~ ~ ~ 2 2 2 0 10 force
        end
    end
    
    as @PlayerInteraction
        id = @s.id
        as @Player if @s.id == id
        else
            /kill @s
        end
    end
    
    as @PlayerBlock
        current_id = @s.player_id
        as @Playing if @s.id == current_id
            player = True
        else
            player = False
        end
        
        if not player
            with
                $(collider) = @s.collider_id
            destroy_collider()
            /kill @s
        end
    end
    
    unless spawned_players
        spawn_players()
    end
    
    if gamemode == $StartingGame
        start_tipoff()
    end
    
    colliders_physics_tick()
    colliders_get_new_collisions()
    get_plane_collisions()
    colliders_resolve_collisions()
    colliders_finalize_tick()
end

function get_plane_collisions()
    for collider_iter = 1 to max_collider
        with
            $(collider) = collider_iter
        do
            define name collider = "collider_$(collider)"
            define name collider_axis_0 = "collider_$(collider)"
            
            y = collider.min_y
            if y <= YnegPlane
                pen = YnegPlane - y
                
                if pen > collider.max_pen
                    with
                        $(vertex) = collider.min_y_vertex
                    do
                        define name vertex = "collider_$(collider)_v$(vertex)"

                        x = vertex.x
                        z = vertex.z
                    end
                    
                    nx = 0
                    ny = $Precision
                    nz = 0
                    
                    create_plane_collision() with macros
                end
            end
            
            y = collider.max_y
            if y >= YposPlane
                pen = y - YposPlane
                
                if pen > collider.max_pen
                    with
                        $(vertex) = collider.max_y_vertex
                    do
                        define name vertex = "collider_$(collider)_v$(vertex)"

                        x = vertex.x
                        z = vertex.z
                    end
                    
                    nx = 0
                    ny = -$Precision
                    nz = 0
                    
                    create_plane_collision() with macros
                end
            end

            x = collider.min_x
            if x <= XnegPlane
                pen = XnegPlane - x
                
                if pen > collider.max_pen
                    with
                        $(vertex) = collider.min_x_vertex
                    do
                        define name vertex = "collider_$(collider)_v$(vertex)"

                        y = vertex.y
                        z = vertex.z
                    end
                    
                    if gamemode == $Playing and collider_iter == 1 and y <= YnegPlane + PortalHeight and z >= (ZnegPlane + ZposPlane) / 2 - PortalWidth / 2 and z <= (ZnegPlane + ZposPlane) / 2 + PortalWidth / 2
                        goal = $Blue
                        score_goal()
                    end
                    
                    nx = $Precision
                    ny = 0
                    nz = 0
                    
                    create_plane_collision() with macros
                end
            end
            
            x = collider.max_x
            if x >= XposPlane
                pen = x - XposPlane
                
                if pen > collider.max_pen
                    with
                        $(vertex) = collider.max_x_vertex
                    do
                        define name vertex = "collider_$(collider)_v$(vertex)"

                        y = vertex.y
                        z = vertex.z
                    end
                    
                    if gamemode == $Playing and collider_iter == 1 and y <= YnegPlane + PortalHeight and z >= (ZnegPlane + ZposPlane) / 2 - PortalWidth / 2 and z <= (ZnegPlane + ZposPlane) / 2 + PortalWidth / 2
                        goal = $Red
                        score_goal()
                    end
                    
                    nx = -$Precision
                    ny = 0
                    nz = 0
                    
                    create_plane_collision() with macros
                end
            end

            z = collider.min_z
            if z <= ZnegPlane
                pen = ZnegPlane - z
                
                if pen > collider.max_pen
                    with
                        $(vertex) = collider.min_z_vertex
                    do
                        define name vertex = "collider_$(collider)_v$(vertex)"

                        x = vertex.x
                        y = vertex.y
                    end
                    
                    nx = 0
                    ny = 0
                    nz = $Precision
                    
                    create_plane_collision() with macros
                end
            end
            
            z = collider.max_z
            if z >= ZposPlane
                pen = z - ZposPlane
                
                if pen > collider.max_pen
                    with
                        $(vertex) = collider.max_z_vertex
                    do
                        define name vertex = "collider_$(collider)_v$(vertex)"

                        x = vertex.x
                        y = vertex.y
                    end
                    
                    nx = 0
                    ny = 0
                    nz = -$Precision
                    
                    create_plane_collision() with macros
                end
            end
        end
    end
end

function create_plane_collision()
    define name collider = "collider_$(collider)"
    
    id = get_unused_collision_id()
    with
        $(collision) = id
    do
        define name collision = "collision_$(collision)"
        collision.id = id
        collision.type = 0
        collision.pen = pen
        
        collision.x = x
        collision.y = y
        collision.z = z
        
        collision.nx = nx
        collision.ny = ny
        collision.nz = nz
        
        collision.restitution = 600
        
        collision.collider1 = collider_iter
    end

    collider.max_pen = pen
    collider.max_pen_col = id
end

function spawn_players()
    @Player.team = None
    @Player[team=red].team = $Red
    @Player[team=blue].team = $Blue
    @Player.spawned = False
    
    as @Player
        @s.spawn_seed = result
            /random value 1..999999999
    end
    
    for team = $Red to $Blue
        for spawn = 1 to $Billion
            lowest_seed = $Billion
            as @Player
                if @s.team == team and not @s.spawned and @s.spawn_seed <= lowest_seed
                    lowest_seed = @s.spawn_seed
                    lowest_id = @s.id
                end
                
                if lowest_seed < $Billion
                    as @Player if @s.id == lowest_id
                        spawn_player_slot()
                    end
                else
                    spawn = $Billion
                end
            end
        end
    end
    
    spawned_players = True
end

function spawn_additional_player()
    @Player[team=red].team = $Red
    @Player[team=blue].team = $Blue
    
    team = @s.team
    spawn = 0
    
    as @Player if @s.team == team
        spawn++
    end
    
    spawn_player_slot()
end

function spawn_player_slot()
    if spawn == 1
        dx = 15000
        dz = 15000
    else if spawn == 2
        dx = 15000
        dz = -15000
    else if spawn == 3
        dx = 40000
        dz = 0
    else
        dx = 40000
        dz = result
            /random value -15000..15000
    end
    
    if team == $Blue
        dx *= -1
        dz *= -1
    end
    
    spawn_player()
end

function spawn_player()
    spawn_x = $Half + dx
    spawn_y = YnegPlane + CubeSize / 2
    spawn_z = $Half + dz
    
    id = @s.id
                
    as @PlayerBlock
        if @s.player_id == id
            with
                $(collider) = @s.collider_id
            do
                define name collider = "collider_$(collider)"
                collider.x = spawn_x
                collider.y = spawn_y
                collider.z = spawn_z
                collider_clear_velocity() with macros
                collider_clear_rotation() with macros
                collider.w = $Precision
                collider.i = 0
                collider.j = 0
                collider.k = 0
            end
        end
        
        @s.boost_meter = 100
    end
                        
    @s.spawned = True
end

function reset_ball()
    with
        $(collider) = 1
    do
        define name collider = "collider_$(collider)"
        collider.x = $Half
        collider.y = YnegPlane + $BallSize / 2
        collider.z = $Half
        collider_clear_velocity() with macros
        collider_clear_rotation() with macros
        collider.w = $Precision
        collider.i = 0
        collider.j = 0
        collider.k = 0
                    
        collider_quaternion_to_transform() with macros
        collider_set_transform() with macros
        collider_sleep() with macros
    end
end

function score_goal()
    gamemode = $Scored
    as @Player at @s
        /playsound minecraft:ui.toast.challenge_complete master @s 0 0 0 1 1 1
    end
    
    if goal == $Red
        title @a 0 40 20 "Goal scored by {BBlue{-!"
        Blue.score++
    else
        title @a 0 40 20 "Goal scored by {RRed{-!"
        Red.score++
    end
    
    for collider_iter = 2 to max_collider
        with
            $(collider) = collider_iter
        do
            define name collider = "collider_$(collider)"
            
            dx = collider.x - x
            dy = collider.y - y
            dz = collider.z - z
            
            vx = collider.velocity_x
            vy = collider.velocity_y
            vz = collider.velocity_z
            
            dist = sqrt(dx*dx + dy*dy + dz*dz)
            
            vx += dx * $Precision / dist * 3
            vy += dy * $Precision / dist * 3
            vz += dz * $Precision / dist * 3
            
            vx /= 2
            vy /= 2
            vz /= 2
            
            collider.velocity_x = vx
            collider.velocity_y = vy
            collider.velocity_z = vz
            
            collider.rotation_x /= 2
            collider.rotation_y /= 2
            collider.rotation_z /= 2
        end
    end
    
    scored_timer = 100
end

function start_tipoff()
    gamemode = $Tipoff
    
    spawn_players()
    reset_ball()
    tipoff_timer = 100
end